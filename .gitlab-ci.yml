# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/

stages:
  - test
  - deploy

variables:
  NODE_VERSION: "18.12.1"
  PHP_VERSION: "8.2"

tests:
  stage: test
  image: php:zts-alpine3.17
  script:
    - apk add --no-cache git
    - git clone https://gitlab.com/ewilan-riviere/glamdring.git
    - php -v
    - cd glamdring
    - php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" && php composer-setup.php && php -r "unlink('composer-setup.php');"
    - php composer.phar install
    - ./vendor/bin/sail up
  # cache:
  #   key:
  #     files:
  #       - composer.lock
  #   policy: pull
  # image: php:8.2
  # script:
  #   - composer install
  #   - ./vendor/bin/pest

deploy-job:
  stage: deploy
  image: alpine:latest
  before_script:
    - "command -v ssh-agent >/dev/null || ( apk add --update openssh )"
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan $SSH_IP >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $SSH_USER@$SSH_IP "
      cd /home/ewilan/www/$CI_PROJECT_NAME &&
      git pull &&
      /usr/bin/php$PHP_VERSION /usr/local/bin/composer install &&
      php$PHP_VERSION artisan optimize:clear &&
      /usr/bin/php$PHP_VERSION /usr/local/bin/composer i --no-dev &&
      php$PHP_VERSION artisan setup:clean &&
      php$PHP_VERSION artisan scout:fresh &&
      /home/ewilan/.nvm/versions/node/v$NODE_VERSION/bin/pnpm i &&
      /home/ewilan/.nvm/versions/node/v$NODE_VERSION/bin/pnpm build &&
      discord-queerotronic.sh '$CI_PROJECT_TITLE'"
  only:
    - main
